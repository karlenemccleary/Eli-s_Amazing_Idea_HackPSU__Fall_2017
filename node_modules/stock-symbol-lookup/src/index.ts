
import {dataUtils} from './dataUtils';
import {searchUtils} from './searchUtils';

var StockSymbolLookup: any = {
    data: {},

    loadData: (): any => {
        return dataUtils.getData()
            .then((data: any) => {
                return this.data = searchUtils.data = data;
            })
            .catch((err: any) => {
                console.log(err);
            });
    },

    getData: (): any => {
        return this.data;
    },

    setData: (data): any => {
        return this.data = searchUtils.data = data;
    },

    search: (input: string, maxEntries: number, unique: boolean): Promise<any> => {
        return searchUtils.search(input, maxEntries, unique)
            .then((results: Array<Array<any>>) => {
                return {
                    symbols: results[0],
                    securities: results[1]
                };
            })
            .catch((err: any) => {
                console.log(err);
            });
    },

    searchAll: (input: string, maxEntries: number): Promise<any> => {
        return searchUtils.searchAll(input, maxEntries)
            .then((results: Array<any>) => {
                return results;
            })
            .catch((err: any) => {
                console.log(err);
            });
    },

    searchBySymbol: (input: string, maxEntries: number): Promise<any> => {
        return searchUtils.searchBySymbol(input, maxEntries)
            .then((results: Array<any>) => {
                return results;
            })
            .catch((err: any) => {
                console.log(err);
            });
    },

    searchBySecurity: (input: string, maxEntries: number): Promise<any> => {
        return searchUtils.searchBySecurity(input, maxEntries)
            .then((results: Array<any>) => {
                return results;
            })
            .catch((err: any) => {
                console.log(err);
            });
    }
};

export = StockSymbolLookup;

